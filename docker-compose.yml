version: '3'

services:

#  gateway:
#    container_name: gateway
#    image: teamcity-dd-gateway:latest
#    restart: unless-stopped
#    networks:
#      - dd-net
#    ports:
#      - ${EXT_PORT}:${INT_PORT}
#    environment:
#      PORT: ${INT_PORT}
#      CLIENT: http://client:${INT_PORT}
#      AUTH: http://authentication:${INT_PORT}
#      PROJECTS: http://projects:${INT_PORT}
#      SWAGGER: http://swagger:${INT_PORT}
#      TRANSLATIONS: http://translations:${INT_PORT}

  client:
    container_name: client
    image: teamcity-dd-client:latest
    restart: unless-stopped
    networks:
      - dd-net
    ports:
      - ${EXT_PORT}:${INT_PORT}
    depends_on:
      - authentication_db
      - projects_db

#  authentication:
#    container_name: authentication
#    image: teamcity-dd-authentication:latest
#    restart: unless-stopped
#    networks:
#      - dd-net
#    expose:
#      - ${INT_PORT}
#    depends_on:
#      - authentication_db

#  translations:
#    container_name: translations
#    image: teamcity-dd-translations:latest
#    restart: unless-stopped
#    networks:
#      - dd-net
#    expose:
#      - ${INT_PORT}
#    environment:
#      PORT: ${INT_PORT}
#      DATABASE_URL: ${TL_DATABASE_URL}
#      KEY_API: ${KEY_API}
#      JWT_ISSUER: ${JWT_ISSUER}
#      JWT_ALGORITHM: ${JWT_ALGORITHM}
#    depends_on:
#      - translation_db

#  projects:
#    container_name: projects
#    image: teamcity-dd-projects:latest
#    restart: unless-stopped
#    networks:
#      - dd-net
#    expose:
#      - ${INT_PORT}
#    environment:
#      PORT: ${INT_PORT}
#      DATABASE_URL: ${PR_DATABASE_URL}
#      KEY_API: ${KEY_API}
#      JWT_ISSUER: ${JWT_ISSUER}
#      JWT_ALGORITHM: ${JWT_ALGORITHM}
#      ENVIRONMENT: ${ENVIRONMENT}
#    depends_on:
#      - projects_db

#  swagger:
#    container_name: swagger
#    image: teamcity-dd-swagger:latest
#    restart: unless-stopped
#    networks:
#      - dd-net
#    expose:
#      - ${INT_PORT}
#    environment:
#      - PORT=${INT_PORT}

  # === Databases === #
  authentication_db:
    container_name: authentication_db
    image: mysql:latest
    restart: always
    networks:
      - dd-net
    volumes:
      - "authentication_config:/etc/mysql/conf.d/config-file.cnf"
      - "authentication_data:/var/lib/mysql:rw"
    expose:
      - ${MYSQL_PORT}
    ports:
      - "3307:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      MYSQL_DATABASE: auth
      MYSQL_TCP_PORT: ${MYSQL_PORT}

  projects_db:
    container_name: projects_db
    image: mongo:4.4.18
    restart: always
    networks:
      - dd-net
    volumes:
      - "projects_data:/data/db"
      - "projects_config:/data/configdb"
    expose:
      - ${MONGO_PORT}
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_DATABASE: projects

#  translation_db:
#    container_name: translation_db
#    image: mongo:4.4.18
#    restart: always
#    networks:
#      - dd-net
#    volumes:
#      - "translations_data:/data/db"
#      - "translations_config:/data/configdb"
#    expose:
#      - ${MONGO_PORT}
#    environment:
#      MONGO_INITDB_DATABASE: translations

volumes:
  authentication_data:
  authentication_config:
#  translations_data:
#  translations_config:
  projects_data:
  projects_config:

networks:
  dd-net:
